From e1cf5b8694b23cdc88f4a4a344f8262aa8ab0f8e Mon Sep 17 00:00:00 2001
From: Daiki Ueno <ueno@gnu.org>
Date: Wed, 10 Mar 2021 16:11:29 +0100
Subject: [PATCH 1/2] _gnutls_buffer_resize: account for unused area if
 AGGRESSIVE_REALLOC

Signed-off-by: Daiki Ueno <ueno@gnu.org>
---
 lib/str.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/lib/str.c b/lib/str.c
index 506fe1721..bc20ebb04 100644
--- a/lib/str.c
+++ b/lib/str.c
@@ -155,12 +155,12 @@ int _gnutls_buffer_resize(gnutls_buffer_st * dest, size_t new_size)
 
 	unused = MEMSUB(dest->data, dest->allocd);
 	dest->allocd =
-	    gnutls_realloc_fast(dest->allocd, new_size);
+	    gnutls_realloc_fast(dest->allocd, new_size + unused);
 	if (dest->allocd == NULL) {
 		gnutls_assert();
 		return GNUTLS_E_MEMORY_ERROR;
 	}
-	dest->max_length = new_size;
+	dest->max_length = new_size + unused;
 	dest->data = dest->allocd + unused;
 
 	return 0;
-- 
2.30.2


From 78691bfe4555c4d610b405173987ed7515515d20 Mon Sep 17 00:00:00 2001
From: Daiki Ueno <ueno@gnu.org>
Date: Wed, 10 Mar 2021 16:12:23 +0100
Subject: [PATCH 2/2] str: suppress -Wunused-function if AGGRESSIVE_REALLOC is
 defined

Signed-off-by: Daiki Ueno <ueno@gnu.org>
---
 lib/str.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/lib/str.c b/lib/str.c
index bc20ebb04..8007340f1 100644
--- a/lib/str.c
+++ b/lib/str.c
@@ -87,15 +87,6 @@ void _gnutls_buffer_clear(gnutls_buffer_st * str)
 
 #define MIN_CHUNK 1024
 
-static void align_allocd_with_data(gnutls_buffer_st * dest)
-{
-	assert(dest->allocd != NULL);
-	assert(dest->data != NULL);
-	if (dest->length)
-		memmove(dest->allocd, dest->data, dest->length);
-	dest->data = dest->allocd;
-}
-
 /**
  * gnutls_buffer_append_data:
  * @dest: the buffer to append to
@@ -168,6 +159,15 @@ int _gnutls_buffer_resize(gnutls_buffer_st * dest, size_t new_size)
 
 #else
 
+static void align_allocd_with_data(gnutls_buffer_st * dest)
+{
+	assert(dest->allocd != NULL);
+	assert(dest->data != NULL);
+	if (dest->length)
+		memmove(dest->allocd, dest->data, dest->length);
+	dest->data = dest->allocd;
+}
+
 int _gnutls_buffer_resize(gnutls_buffer_st * dest, size_t new_size)
 {
 	if (unlikely(dest->data != NULL && dest->allocd == NULL))
-- 
2.30.2

